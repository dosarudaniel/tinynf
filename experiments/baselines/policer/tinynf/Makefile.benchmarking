# Get this directory
THIS_DIR := $(abspath $(dir $(lastword $(MAKEFILE_LIST))))

# fancy shell stuff
SHELL := /bin/bash -O extglob -c

# Vigor dir
VIGOR_DIR := $(THIS_DIR)/../../vigor/vigor

# Vigor baseline setup script if needed
_IGNORED := $(shell cd $(VIGOR_DIR)/..; ./setup.sh 2>/dev/null)

ifeq (,$(TN_FILES))
# Our main file
TN_FILES += $(THIS_DIR)/main.c
endif
# Policer files (but not policer_main, which we modify, nor verif-only 'loop' files)
TN_FILES += $(THIS_DIR)/../policer_main.c $(shell echo $(VIGOR_DIR)/vigpol/!(policer_main|loop).c)
# Vigor utility file (but not nf.c, since we have our own main!)
TN_FILES += $(VIGOR_DIR)/nf-util.c
# Vigor's libVig
TN_FILES += $(shell echo $(VIGOR_DIR)/libvig/verified/*.c)

# cpu_zero and friends
TN_CFLAGS += -D_GNU_SOURCE
# Vigor expects its root dir to be an include path, as well as the NF dir
TN_CFLAGS += -I $(VIGOR_DIR) -I $(VIGOR_DIR)/vigpol

# Include the file that holds the global variables for the DPDK shim
RTE_SDK := $(THIS_DIR)/../../../dpdk-shim
RTE_TARGET := .
TN_NO_RUN_TARGET := true
DPDK_DIR := $(RTE_SDK)/$(RTE_TARGET)
TN_CFLAGS += -isystem $(DPDK_DIR)/include
TN_FILES += $(DPDK_DIR)/tn_dpdk.c

# Vigor compiles with DPDK makefiles, which do not care about extremely many warnings, so let's not even bother
TN_CFLAGS += -w

# Use Vigor's fast power-of-2-capacity map
TN_CFLAGS += -DCAPACITY_POW2

ifdef TN_2CORE
TN_CFLAGS += -DTN_2CORE
TN_CFLAGS += -lpthread
endif

# Include the TinyNF makefile
include $(THIS_DIR)/../../../../code/Makefile

# Include the Vigor NF's makefile, minus the other makefiles, so we can get the NF's args
VIGOR_MAKEFILE := $(shell mktemp)
_IGNORED := $(shell cat $(VIGOR_DIR)/vigpol/Makefile | grep -v 'include.*Makefile' > $(VIGOR_MAKEFILE))
include $(VIGOR_MAKEFILE)

build: tn_default

# Preserve LD_LIBRARY_PATH so that util/perf.h can find libPAPI
run:
	@sudo LD_LIBRARY_PATH="$$LD_LIBRARY_PATH" ./tinynf $(TN_ARGS) -- $(NF_ARGS)

print-nf-name:
	@echo tinynf
